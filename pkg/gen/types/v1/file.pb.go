// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: types/v1/file.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *FileInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Content []byte    `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetInfo() *FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size    uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mode    uint32                 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	ModTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`
	IsDir   bool                   `protobuf:"varint,5,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileInfo) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type FileSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      *FileInfo       `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	BlockSize uint32          `protobuf:"varint,2,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	SumBlocks []*FileSumBlock `protobuf:"bytes,3,rep,name=sum_blocks,json=sumBlocks,proto3" json:"sum_blocks,omitempty"`
}

func (x *FileSum) Reset() {
	*x = FileSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSum) ProtoMessage() {}

func (x *FileSum) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSum.ProtoReflect.Descriptor instead.
func (*FileSum) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *FileSum) GetInfo() *FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *FileSum) GetBlockSize() uint32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *FileSum) GetSumBlocks() []*FileSumBlock {
	if x != nil {
		return x.SumBlocks
	}
	return nil
}

type FileSumBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FastSig   uint32   `protobuf:"varint,1,opt,name=fast_sig,json=fastSig,proto3" json:"fast_sig,omitempty"`      // buzhash
	StrongSig *Uint256 `protobuf:"bytes,2,opt,name=strong_sig,json=strongSig,proto3" json:"strong_sig,omitempty"` // blake3 sum256 (32 bytes)
	Size      uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FileSumBlock) Reset() {
	*x = FileSumBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSumBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSumBlock) ProtoMessage() {}

func (x *FileSumBlock) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSumBlock.ProtoReflect.Descriptor instead.
func (*FileSumBlock) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *FileSumBlock) GetFastSig() uint32 {
	if x != nil {
		return x.FastSig
	}
	return 0
}

func (x *FileSumBlock) GetStrongSig() *Uint256 {
	if x != nil {
		return x.StrongSig
	}
	return nil
}

func (x *FileSumBlock) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FilePatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *FileInfo         `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Blocks []*FileBlockPatch `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *FilePatch) Reset() {
	*x = FilePatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePatch) ProtoMessage() {}

func (x *FilePatch) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePatch.ProtoReflect.Descriptor instead.
func (*FilePatch) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{4}
}

func (x *FilePatch) GetInfo() *FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *FilePatch) GetBlocks() []*FileBlockPatch {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type FileBlockPatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Patch:
	//
	//	*FileBlockPatch_BlockId
	//	*FileBlockPatch_Data
	Patch isFileBlockPatch_Patch `protobuf_oneof:"patch"`
}

func (x *FileBlockPatch) Reset() {
	*x = FileBlockPatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBlockPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBlockPatch) ProtoMessage() {}

func (x *FileBlockPatch) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBlockPatch.ProtoReflect.Descriptor instead.
func (*FileBlockPatch) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{5}
}

func (m *FileBlockPatch) GetPatch() isFileBlockPatch_Patch {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (x *FileBlockPatch) GetBlockId() uint32 {
	if x, ok := x.GetPatch().(*FileBlockPatch_BlockId); ok {
		return x.BlockId
	}
	return 0
}

func (x *FileBlockPatch) GetData() []byte {
	if x, ok := x.GetPatch().(*FileBlockPatch_Data); ok {
		return x.Data
	}
	return nil
}

type isFileBlockPatch_Patch interface {
	isFileBlockPatch_Patch()
}

type FileBlockPatch_BlockId struct {
	BlockId uint32 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3,oneof"` // ID of the block with the data
}

type FileBlockPatch_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"` // actual data to add
}

func (*FileBlockPatch_BlockId) isFileBlockPatch_Patch() {}

func (*FileBlockPatch_Data) isFileBlockPatch_Patch() {}

type Uint256 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A uint64 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B uint64 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	C uint64 `protobuf:"varint,3,opt,name=c,proto3" json:"c,omitempty"`
	D uint64 `protobuf:"varint,4,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *Uint256) Reset() {
	*x = Uint256{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_file_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint256) ProtoMessage() {}

func (x *Uint256) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_file_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint256.ProtoReflect.Descriptor instead.
func (*Uint256) Descriptor() ([]byte, []int) {
	return file_types_v1_file_proto_rawDescGZIP(), []int{6}
}

func (x *Uint256) GetA() uint64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *Uint256) GetB() uint64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Uint256) GetC() uint64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *Uint256) GetD() uint64 {
	if x != nil {
		return x.D
	}
	return 0
}

var File_types_v1_file_proto protoreflect.FileDescriptor

var file_types_v1_file_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x13, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x94, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x75, 0x6d, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x75, 0x6d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x6d,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x22, 0x6f, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x66, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x0a, 0x73,
	0x74, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x32,
	0x35, 0x36, 0x52, 0x09, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x65, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x26,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x41, 0x0a, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x32, 0x35,
	0x36, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x61, 0x12,
	0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a,
	0x01, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x63, 0x12, 0x0c, 0x0a, 0x01, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x64, 0x42, 0x8e, 0x01, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x79, 0x62, 0x61, 0x62, 0x74, 0x6d, 0x65, 0x2f, 0x73, 0x79, 0x6e,
	0x63, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x58,
	0x58, 0xaa, 0x02, 0x08, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x09, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_types_v1_file_proto_rawDescOnce sync.Once
	file_types_v1_file_proto_rawDescData = file_types_v1_file_proto_rawDesc
)

func file_types_v1_file_proto_rawDescGZIP() []byte {
	file_types_v1_file_proto_rawDescOnce.Do(func() {
		file_types_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_v1_file_proto_rawDescData)
	})
	return file_types_v1_file_proto_rawDescData
}

var file_types_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_types_v1_file_proto_goTypes = []any{
	(*File)(nil),                  // 0: types.v1.File
	(*FileInfo)(nil),              // 1: types.v1.FileInfo
	(*FileSum)(nil),               // 2: types.v1.FileSum
	(*FileSumBlock)(nil),          // 3: types.v1.FileSumBlock
	(*FilePatch)(nil),             // 4: types.v1.FilePatch
	(*FileBlockPatch)(nil),        // 5: types.v1.FileBlockPatch
	(*Uint256)(nil),               // 6: types.v1.Uint256
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_types_v1_file_proto_depIdxs = []int32{
	1, // 0: types.v1.File.info:type_name -> types.v1.FileInfo
	7, // 1: types.v1.FileInfo.mod_time:type_name -> google.protobuf.Timestamp
	1, // 2: types.v1.FileSum.info:type_name -> types.v1.FileInfo
	3, // 3: types.v1.FileSum.sum_blocks:type_name -> types.v1.FileSumBlock
	6, // 4: types.v1.FileSumBlock.strong_sig:type_name -> types.v1.Uint256
	1, // 5: types.v1.FilePatch.info:type_name -> types.v1.FileInfo
	5, // 6: types.v1.FilePatch.blocks:type_name -> types.v1.FileBlockPatch
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_types_v1_file_proto_init() }
func file_types_v1_file_proto_init() {
	if File_types_v1_file_proto != nil {
		return
	}
	file_types_v1_path_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_v1_file_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FileSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FileSumBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FilePatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FileBlockPatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_file_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Uint256); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_v1_file_proto_msgTypes[5].OneofWrappers = []any{
		(*FileBlockPatch_BlockId)(nil),
		(*FileBlockPatch_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_v1_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_file_proto_goTypes,
		DependencyIndexes: file_types_v1_file_proto_depIdxs,
		MessageInfos:      file_types_v1_file_proto_msgTypes,
	}.Build()
	File_types_v1_file_proto = out.File
	file_types_v1_file_proto_rawDesc = nil
	file_types_v1_file_proto_goTypes = nil
	file_types_v1_file_proto_depIdxs = nil
}
